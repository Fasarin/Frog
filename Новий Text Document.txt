public static List<Train> GetAvailableTrains(DateTime date, string stationName)
{
    List<Train> availableTrains = new List<Train>();

    try
    {
        EstablishConnection();

        if (_connection != null)
        {
            string weekday = date.DayOfWeek.ToString();
            string query = @"
                SELECT DISTINCT t.*
                FROM Train t
                INNER JOIN Schedule s ON t.Train_Number = s.Train_Number
                WHERE s.Weekday LIKE CONCAT('%', @weekday, '%')
                AND s.Platform = @stationName
                AND (s.Departure_Time > @currentTime OR s.Departure_Time = @currentTime)";

            _connection.Open();
            _cmd = _connection.CreateCommand();
            _cmd.CommandType = CommandType.Text;
            _cmd.CommandText = query;
            _cmd.Parameters.AddWithValue("@weekday", weekday);
            _cmd.Parameters.AddWithValue("@stationName", stationName);
            _cmd.Parameters.AddWithValue("@currentTime", date.TimeOfDay);

            using (MySqlDataReader reader = _cmd.ExecuteReader())
            {
                while (reader.Read())
                {
                    availableTrains.Add(new Train
                    {
                        Train_ID = Convert.ToInt32(reader["Train_ID"]),
                        Train_Number = reader["Train_Number"].ToString(),
                        Departure_Station = reader["Departure_Station"].ToString(),
                        Destination_Station = reader["Destination_Station"].ToString(),
                        Number_of_Cars = Convert.ToInt32(reader["Number_of_Cars"]),
                        Car_Types = reader["Car_Types"].ToString(),
                        Number_of_Seats = Convert.ToInt32(reader["Number_of_Seats"])
                    });
                }
            }
            _connection.Close();
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show($"An error occurred while retrieving available trains: {ex.Message}", "Error", MessageBoxButton.OK, MessageBoxImage.Error);
        _connection.Close();
    }

    return availableTrains;
}